name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang]
        buildtype: [debug, debugoptimized, release]
#        checker: [off, asan, valgrind, ubsan]
    container:
      image: opensuse/tumbleweed
      options: "--privileged"
      volumes:
        - /sys/

    steps:
    - uses: actions/checkout@v1
    - name: install dependencies
      run: zypper --non-interactive in gcc clang make libnetlink-devel libnl3-devel libjson-c-devel meson ethtool python3 python3-devel python3-cffi

    - name: configure
      run: meson -Dprint_advanced_messages=true -Dprint_table=true -Dcheck_initial_settings=true -Dbuildtype=${{ matrix.buildtype }} build
      env:
        CC: ${{ matrix.compiler }}

    - name: build
      run: meson compile
      working-directory: ./build

    - name: test
      run: meson test
      working-directory: ./build

    - name: lint
      run: ninja clang-tidy
      working-directory: ./build

    - name: format
      run: |
        ninja clang-format
        git diff --exit-code
      working-directory: ./build

    - name: upload build directory
      uses: 'actions/upload-artifact@v2'
      if: ${{ always() }}
      with:
        name: build-dir ${{ matrix.compiler }}-${{ matrix.buildtype }}
        path: ./build
